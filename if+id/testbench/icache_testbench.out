#! /c/iverilog/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-965-g55e06db6)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "D:\iverilog\lib\ivl\system.vpi";
:vpi_module "D:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "D:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "D:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "D:\iverilog\lib\ivl\va_math.vpi";
:vpi_module "D:\iverilog\lib\ivl\v2009.vpi";
S_000000000124e570 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_00000000012536a0 .scope module, "icache_testbench" "icache_testbench" 3 3;
 .timescale -9 -12;
P_0000000001253830 .param/l "FETCH_WIDTH" 0 3 8, +C4<00000000000000000000000000000100>;
P_0000000001253868 .param/l "LINE_NUM" 0 3 5, +C4<00000000000000000000000000000010>;
P_00000000012538a0 .param/l "WORDS_PER_LINE" 0 3 6, +C4<00000000000000000000000000010000>;
P_00000000012538d8 .param/l "WORD_WIDTH" 0 3 7, +C4<00000000000000000000000000100000>;
v00000000012c06c0_0 .var "clk", 0 0;
v00000000012c1160_0 .var "fetch_addr", 4 0;
v00000000012c08a0_0 .net "inst_batch", 127 0, v00000000012c0760_0;  1 drivers
v00000000012c1a20_0 .var "rst_n", 0 0;
S_0000000001251a80 .scope module, "dut" "icache" 3 21, 4 1 0, S_00000000012536a0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "rst_n";
    .port_info 2 /INPUT 5 "fetch_addr";
    .port_info 3 /OUTPUT 128 "inst_batch";
P_0000000001251c10 .param/l "FETCH_WIDTH" 0 4 5, +C4<00000000000000000000000000000100>;
P_0000000001251c48 .param/l "LINE_NUM" 0 4 2, +C4<00000000000000000000000000000010>;
P_0000000001251c80 .param/l "WORDS_PER_LINE" 0 4 3, +C4<00000000000000000000000000010000>;
P_0000000001251cb8 .param/l "WORD_WIDTH" 0 4 4, +C4<00000000000000000000000000100000>;
v000000000124aae0_0 .net *"_ivl_0", 31 0, L_00000000012c04e0;  1 drivers
v000000000124ad60_0 .net *"_ivl_10", 31 0, L_00000000012c0580;  1 drivers
L_00000000012c26e8 .functor BUFT 1, C4<000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v000000000124ab80_0 .net *"_ivl_13", 26 0, L_00000000012c26e8;  1 drivers
L_00000000012c2730 .functor BUFT 1, C4<00000000000000000000000000010000>, C4<0>, C4<0>, C4<0>;
v000000000124ac20_0 .net/2u *"_ivl_14", 31 0, L_00000000012c2730;  1 drivers
v000000000124acc0_0 .net *"_ivl_16", 31 0, L_00000000012c09e0;  1 drivers
L_00000000012c2658 .functor BUFT 1, C4<000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v000000000124ae00_0 .net *"_ivl_3", 26 0, L_00000000012c2658;  1 drivers
L_00000000012c26a0 .functor BUFT 1, C4<00000000000000000000000000010000>, C4<0>, C4<0>, C4<0>;
v000000000124aea0_0 .net/2u *"_ivl_4", 31 0, L_00000000012c26a0;  1 drivers
v000000000124afe0_0 .net *"_ivl_6", 31 0, L_00000000012c0940;  1 drivers
v000000000124af40_0 .net "clk", 0 0, v00000000012c06c0_0;  1 drivers
v000000000124b080_0 .var "curr_line", 1 0;
v000000000124b120_0 .var "curr_off", 4 0;
v000000000124b260_0 .var "curr_word", 4 0;
v000000000124b300_0 .net "fetch_addr", 4 0, v00000000012c1160_0;  1 drivers
v000000000124b3a0 .array "icache_mem", 31 0, 31 0;
v00000000012c0760_0 .var "inst_batch", 127 0;
v00000000012c0800_0 .net "line_idx", 0 0, L_00000000012c1b60;  1 drivers
v00000000012c15c0_0 .net "rst_n", 0 0, v00000000012c1a20_0;  1 drivers
v00000000012c1c00_0 .net "word_off", 3 0, L_00000000012c1840;  1 drivers
v000000000124b3a0_0 .array/port v000000000124b3a0, 0;
v000000000124b3a0_1 .array/port v000000000124b3a0, 1;
E_0000000001251120/0 .event edge, v00000000012c1c00_0, v00000000012c0800_0, v000000000124b3a0_0, v000000000124b3a0_1;
v000000000124b3a0_2 .array/port v000000000124b3a0, 2;
v000000000124b3a0_3 .array/port v000000000124b3a0, 3;
v000000000124b3a0_4 .array/port v000000000124b3a0, 4;
v000000000124b3a0_5 .array/port v000000000124b3a0, 5;
E_0000000001251120/1 .event edge, v000000000124b3a0_2, v000000000124b3a0_3, v000000000124b3a0_4, v000000000124b3a0_5;
v000000000124b3a0_6 .array/port v000000000124b3a0, 6;
v000000000124b3a0_7 .array/port v000000000124b3a0, 7;
v000000000124b3a0_8 .array/port v000000000124b3a0, 8;
v000000000124b3a0_9 .array/port v000000000124b3a0, 9;
E_0000000001251120/2 .event edge, v000000000124b3a0_6, v000000000124b3a0_7, v000000000124b3a0_8, v000000000124b3a0_9;
v000000000124b3a0_10 .array/port v000000000124b3a0, 10;
v000000000124b3a0_11 .array/port v000000000124b3a0, 11;
v000000000124b3a0_12 .array/port v000000000124b3a0, 12;
v000000000124b3a0_13 .array/port v000000000124b3a0, 13;
E_0000000001251120/3 .event edge, v000000000124b3a0_10, v000000000124b3a0_11, v000000000124b3a0_12, v000000000124b3a0_13;
v000000000124b3a0_14 .array/port v000000000124b3a0, 14;
v000000000124b3a0_15 .array/port v000000000124b3a0, 15;
v000000000124b3a0_16 .array/port v000000000124b3a0, 16;
v000000000124b3a0_17 .array/port v000000000124b3a0, 17;
E_0000000001251120/4 .event edge, v000000000124b3a0_14, v000000000124b3a0_15, v000000000124b3a0_16, v000000000124b3a0_17;
v000000000124b3a0_18 .array/port v000000000124b3a0, 18;
v000000000124b3a0_19 .array/port v000000000124b3a0, 19;
v000000000124b3a0_20 .array/port v000000000124b3a0, 20;
v000000000124b3a0_21 .array/port v000000000124b3a0, 21;
E_0000000001251120/5 .event edge, v000000000124b3a0_18, v000000000124b3a0_19, v000000000124b3a0_20, v000000000124b3a0_21;
v000000000124b3a0_22 .array/port v000000000124b3a0, 22;
v000000000124b3a0_23 .array/port v000000000124b3a0, 23;
v000000000124b3a0_24 .array/port v000000000124b3a0, 24;
v000000000124b3a0_25 .array/port v000000000124b3a0, 25;
E_0000000001251120/6 .event edge, v000000000124b3a0_22, v000000000124b3a0_23, v000000000124b3a0_24, v000000000124b3a0_25;
v000000000124b3a0_26 .array/port v000000000124b3a0, 26;
v000000000124b3a0_27 .array/port v000000000124b3a0, 27;
v000000000124b3a0_28 .array/port v000000000124b3a0, 28;
v000000000124b3a0_29 .array/port v000000000124b3a0, 29;
E_0000000001251120/7 .event edge, v000000000124b3a0_26, v000000000124b3a0_27, v000000000124b3a0_28, v000000000124b3a0_29;
v000000000124b3a0_30 .array/port v000000000124b3a0, 30;
v000000000124b3a0_31 .array/port v000000000124b3a0, 31;
E_0000000001251120/8 .event edge, v000000000124b3a0_30, v000000000124b3a0_31;
E_0000000001251120 .event/or E_0000000001251120/0, E_0000000001251120/1, E_0000000001251120/2, E_0000000001251120/3, E_0000000001251120/4, E_0000000001251120/5, E_0000000001251120/6, E_0000000001251120/7, E_0000000001251120/8;
L_00000000012c04e0 .concat [ 5 27 0 0], v00000000012c1160_0, L_00000000012c2658;
L_00000000012c0940 .arith/div 32, L_00000000012c04e0, L_00000000012c26a0;
L_00000000012c1b60 .part L_00000000012c0940, 0, 1;
L_00000000012c0580 .concat [ 5 27 0 0], v00000000012c1160_0, L_00000000012c26e8;
L_00000000012c09e0 .arith/mod 32, L_00000000012c0580, L_00000000012c2730;
L_00000000012c1840 .part L_00000000012c09e0, 0, 4;
S_0000000001251d00 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 4 32, 4 32 0, S_0000000001251a80;
 .timescale -9 -12;
v000000000124b4e0_0 .var/2s "i", 31 0;
S_0000000001222bb0 .scope begin, "$unm_blk_6" "$unm_blk_6" 4 47, 4 47 0, S_0000000001251a80;
 .timescale -9 -12;
v000000000124a900 .array "tmp_mem", 31 0, 31 0;
S_0000000001222d40 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 4 53, 4 53 0, S_0000000001222bb0;
 .timescale -9 -12;
v000000000124aa40_0 .var/2s "i", 31 0;
S_0000000001222ed0 .scope begin, "$ivl_for_loop3" "$ivl_for_loop3" 4 54, 4 54 0, S_0000000001222d40;
 .timescale -9 -12;
v000000000124b1c0_0 .var/2s "j", 31 0;
S_0000000001254820 .scope begin, "$ivl_for_loop4" "$ivl_for_loop4" 4 59, 4 59 0, S_0000000001222bb0;
 .timescale -9 -12;
v000000000124a720_0 .var/2s "i", 31 0;
S_00000000012549b0 .scope begin, "$ivl_for_loop5" "$ivl_for_loop5" 4 61, 4 61 0, S_0000000001254820;
 .timescale -9 -12;
v000000000124a5e0_0 .var/2s "j", 31 0;
S_00000000012c2330 .scope task, "print_batch" "print_batch" 3 67, 3 67 0, S_00000000012536a0;
 .timescale -9 -12;
v00000000012c12a0_0 .var "addr", 4 0;
v00000000012c0300_0 .var "batch", 127 0;
TD_icache_testbench.print_batch ;
    %vpi_call/w 3 69 "$display", "fetch_addr = %0d:", v00000000012c12a0_0 {0 0 0};
    %fork t_1, S_00000000012c24c0;
    %jmp t_0;
    .scope S_00000000012c24c0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000012c1ca0_0, 0, 32;
T_0.0 ;
    %load/vec4 v00000000012c1ca0_0;
    %cmpi/s 4, 0, 32;
    %jmp/0xz T_0.1, 5;
    %load/vec4 v00000000012c0300_0;
    %load/vec4 v00000000012c1ca0_0;
    %pad/s 37;
    %muli 32, 0, 37;
    %part/s 32;
    %vpi_call/w 3 71 "$display", "inst_batch[%0d] = %h", v00000000012c1ca0_0, S<0,vec4,u32> {1 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000012c1ca0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000012c1ca0_0, 0, 32;
    %jmp T_0.0;
T_0.1 ;
    %end;
    .scope S_00000000012c2330;
t_0 %join;
    %end;
S_00000000012c24c0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 70, 3 70 0, S_00000000012c2330;
 .timescale -9 -12;
v00000000012c1ca0_0 .var/2s "i", 31 0;
    .scope S_0000000001251a80;
T_1 ;
Ewait_0 .event/or E_0000000001251120, E_0x0;
    %wait Ewait_0;
    %fork t_3, S_0000000001251d00;
    %jmp t_2;
    .scope S_0000000001251d00;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000000000124b4e0_0, 0, 32;
T_1.0 ;
    %load/vec4 v000000000124b4e0_0;
    %cmpi/s 4, 0, 32;
    %jmp/0xz T_1.1, 5;
    %load/vec4 v00000000012c1c00_0;
    %pad/u 32;
    %load/vec4 v000000000124b4e0_0;
    %add;
    %pad/u 5;
    %store/vec4 v000000000124b120_0, 0, 5;
    %load/vec4 v00000000012c0800_0;
    %pad/u 32;
    %load/vec4 v000000000124b120_0;
    %pad/u 32;
    %pushi/vec4 16, 0, 32;
    %div;
    %add;
    %pad/u 2;
    %store/vec4 v000000000124b080_0, 0, 2;
    %load/vec4 v000000000124b120_0;
    %pad/u 32;
    %pushi/vec4 16, 0, 32;
    %mod;
    %pad/u 5;
    %store/vec4 v000000000124b260_0, 0, 5;
    %load/vec4 v000000000124b080_0;
    %pad/u 32;
    %cmpi/u 2, 0, 32;
    %jmp/0xz  T_1.2, 5;
    %load/vec4 v000000000124b080_0;
    %pad/u 8;
    %pad/u 12;
    %muli 16, 0, 12;
    %pad/u 13;
    %load/vec4 v000000000124b260_0;
    %pad/u 6;
    %pad/u 13;
    %add;
    %ix/vec4 4;
    %load/vec4a v000000000124b3a0, 4;
    %load/vec4 v000000000124b4e0_0;
    %pad/s 37;
    %muli 32, 0, 37;
    %ix/vec4/s 4;
    %store/vec4 v00000000012c0760_0, 4, 32;
    %jmp T_1.3;
T_1.2 ;
    %pushi/vec4 19, 0, 32;
    %load/vec4 v000000000124b4e0_0;
    %pad/s 37;
    %muli 32, 0, 37;
    %ix/vec4/s 4;
    %store/vec4 v00000000012c0760_0, 4, 32;
T_1.3 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000000000124b4e0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000000000124b4e0_0, 0, 32;
    %jmp T_1.0;
T_1.1 ;
    %end;
    .scope S_0000000001251a80;
t_2 %join;
    %jmp T_1;
    .thread T_1, $push;
    .scope S_0000000001251a80;
T_2 ;
    %fork t_5, S_0000000001222bb0;
    %jmp t_4;
    .scope S_0000000001222bb0;
t_5 ;
    %vpi_call/w 4 51 "$readmemh", "./memory/test.mem", v000000000124a900 {0 0 0};
    %fork t_7, S_0000000001222d40;
    %jmp t_6;
    .scope S_0000000001222d40;
t_7 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000000000124aa40_0, 0, 32;
T_2.0 ;
    %load/vec4 v000000000124aa40_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_2.1, 5;
    %fork t_9, S_0000000001222ed0;
    %jmp t_8;
    .scope S_0000000001222ed0;
t_9 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000000000124b1c0_0, 0, 32;
T_2.2 ;
    %load/vec4 v000000000124b1c0_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_2.3, 5;
    %load/vec4 v000000000124aa40_0;
    %pad/s 65;
    %muli 16, 0, 65;
    %load/vec4 v000000000124b1c0_0;
    %pad/s 65;
    %add;
    %ix/vec4/s 4;
    %load/vec4a v000000000124a900, 4;
    %load/vec4 v000000000124aa40_0;
    %pad/s 37;
    %pad/s 41;
    %muli 16, 0, 41;
    %pad/s 42;
    %load/vec4 v000000000124b1c0_0;
    %pad/s 42;
    %add;
    %ix/vec4/s 4;
    %store/vec4a v000000000124b3a0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000000000124b1c0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000000000124b1c0_0, 0, 32;
    %jmp T_2.2;
T_2.3 ;
    %end;
    .scope S_0000000001222d40;
t_8 %join;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000000000124aa40_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000000000124aa40_0, 0, 32;
    %jmp T_2.0;
T_2.1 ;
    %end;
    .scope S_0000000001222bb0;
t_6 %join;
    %vpi_call/w 4 58 "$display", "=== icache_mem ===" {0 0 0};
    %fork t_11, S_0000000001254820;
    %jmp t_10;
    .scope S_0000000001254820;
t_11 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000000000124a720_0, 0, 32;
T_2.4 ;
    %load/vec4 v000000000124a720_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_2.5, 5;
    %vpi_call/w 4 60 "$write", "cacheline[%0d]: ", v000000000124a720_0 {0 0 0};
    %fork t_13, S_00000000012549b0;
    %jmp t_12;
    .scope S_00000000012549b0;
t_13 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000000000124a5e0_0, 0, 32;
T_2.6 ;
    %load/vec4 v000000000124a5e0_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_2.7, 5;
    %load/vec4 v000000000124a720_0;
    %pad/s 37;
    %pad/s 41;
    %muli 16, 0, 41;
    %pad/s 42;
    %load/vec4 v000000000124a5e0_0;
    %pad/s 42;
    %add;
    %ix/vec4/s 4;
    %load/vec4a v000000000124b3a0, 4;
    %vpi_call/w 4 62 "$write", "%h ", S<0,vec4,u32> {1 0 0};
    %load/vec4 v000000000124a5e0_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v000000000124a5e0_0, 0, 32;
    %jmp T_2.6;
T_2.7 ;
    %end;
    .scope S_0000000001254820;
t_12 %join;
    %vpi_call/w 4 63 "$write", " \012" {0 0 0};
    %load/vec4 v000000000124a720_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v000000000124a720_0, 0, 32;
    %jmp T_2.4;
T_2.5 ;
    %end;
    .scope S_0000000001222bb0;
t_10 %join;
    %end;
    .scope S_0000000001251a80;
t_4 %join;
    %end;
    .thread T_2;
    .scope S_00000000012536a0;
T_3 ;
    %vpi_call/w 3 4 "$dumpvars", 32'sb00000000000000000000000000000000, S_00000000012536a0 {0 0 0};
    %end;
    .thread T_3;
    .scope S_00000000012536a0;
T_4 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000012c06c0_0, 0, 1;
T_4.0 ;
    %delay 5000, 0;
    %load/vec4 v00000000012c06c0_0;
    %inv;
    %store/vec4 v00000000012c06c0_0, 0, 1;
    %jmp T_4.0;
    %end;
    .thread T_4;
    .scope S_00000000012536a0;
T_5 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000012c1a20_0, 0, 1;
    %delay 15000, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000012c1a20_0, 0, 1;
    %end;
    .thread T_5;
    .scope S_00000000012536a0;
T_6 ;
    %delay 30000, 0;
    %vpi_call/w 3 41 "$display", "==== [1] fetch (within line) ====" {0 0 0};
    %pushi/vec4 0, 0, 5;
    %store/vec4 v00000000012c1160_0, 0, 5;
    %delay 1000, 0;
    %load/vec4 v00000000012c1160_0;
    %store/vec4 v00000000012c12a0_0, 0, 5;
    %load/vec4 v00000000012c08a0_0;
    %store/vec4 v00000000012c0300_0, 0, 128;
    %fork TD_icache_testbench.print_batch, S_00000000012c2330;
    %join;
    %pushi/vec4 4, 0, 5;
    %store/vec4 v00000000012c1160_0, 0, 5;
    %delay 1000, 0;
    %load/vec4 v00000000012c1160_0;
    %store/vec4 v00000000012c12a0_0, 0, 5;
    %load/vec4 v00000000012c08a0_0;
    %store/vec4 v00000000012c0300_0, 0, 128;
    %fork TD_icache_testbench.print_batch, S_00000000012c2330;
    %join;
    %vpi_call/w 3 48 "$display", "\012==== [2] fetch (across lines) ====" {0 0 0};
    %pushi/vec4 14, 0, 5;
    %store/vec4 v00000000012c1160_0, 0, 5;
    %delay 1000, 0;
    %load/vec4 v00000000012c1160_0;
    %store/vec4 v00000000012c12a0_0, 0, 5;
    %load/vec4 v00000000012c08a0_0;
    %store/vec4 v00000000012c0300_0, 0, 128;
    %fork TD_icache_testbench.print_batch, S_00000000012c2330;
    %join;
    %pushi/vec4 15, 0, 5;
    %store/vec4 v00000000012c1160_0, 0, 5;
    %delay 1000, 0;
    %load/vec4 v00000000012c1160_0;
    %store/vec4 v00000000012c12a0_0, 0, 5;
    %load/vec4 v00000000012c08a0_0;
    %store/vec4 v00000000012c0300_0, 0, 128;
    %fork TD_icache_testbench.print_batch, S_00000000012c2330;
    %join;
    %vpi_call/w 3 55 "$display", "\012==== [3] fetch (insufficient 4 instructions) ====" {0 0 0};
    %pushi/vec4 29, 0, 5;
    %store/vec4 v00000000012c1160_0, 0, 5;
    %delay 1000, 0;
    %load/vec4 v00000000012c1160_0;
    %store/vec4 v00000000012c12a0_0, 0, 5;
    %load/vec4 v00000000012c08a0_0;
    %store/vec4 v00000000012c0300_0, 0, 128;
    %fork TD_icache_testbench.print_batch, S_00000000012c2330;
    %join;
    %pushi/vec4 31, 0, 5;
    %store/vec4 v00000000012c1160_0, 0, 5;
    %delay 1000, 0;
    %load/vec4 v00000000012c1160_0;
    %store/vec4 v00000000012c12a0_0, 0, 5;
    %load/vec4 v00000000012c08a0_0;
    %store/vec4 v00000000012c0300_0, 0, 128;
    %fork TD_icache_testbench.print_batch, S_00000000012c2330;
    %join;
    %vpi_call/w 3 62 "$display", "\012==== testbench done ====" {0 0 0};
    %delay 10000, 0;
    %vpi_call/w 3 63 "$finish" {0 0 0};
    %end;
    .thread T_6;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "./testbench/icache_testbench.sv";
    "./modules/icache.sv";
