#! /c/iverilog/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-965-g55e06db6)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "D:\iverilog\lib\ivl\system.vpi";
:vpi_module "D:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "D:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "D:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "D:\iverilog\lib\ivl\va_math.vpi";
:vpi_module "D:\iverilog\lib\ivl\v2009.vpi";
S_00000000012bfb70 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_00000000012924d0 .scope module, "icache" "icache" 3 1;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "rst_n";
    .port_info 2 /INPUT 5 "fetch_addr";
    .port_info 3 /OUTPUT 128 "inst_batch";
P_00000000012bd730 .param/l "FETCH_WIDTH" 0 3 5, +C4<00000000000000000000000000000100>;
P_00000000012bd768 .param/l "LINE_NUM" 0 3 2, +C4<00000000000000000000000000000010>;
P_00000000012bd7a0 .param/l "WORDS_PER_LINE" 0 3 3, +C4<00000000000000000000000000010000>;
P_00000000012bd7d8 .param/l "WORD_WIDTH" 0 3 4, +C4<00000000000000000000000000100000>;
v00000000012be940_0 .net *"_ivl_0", 31 0, L_0000000001322ae0;  1 drivers
v00000000012beda0_0 .net *"_ivl_10", 31 0, L_0000000001322b80;  1 drivers
L_0000000001323d78 .functor BUFT 1, C4<000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v00000000012bf200_0 .net *"_ivl_13", 26 0, L_0000000001323d78;  1 drivers
L_0000000001323dc0 .functor BUFT 1, C4<00000000000000000000000000010000>, C4<0>, C4<0>, C4<0>;
v00000000012be6c0_0 .net/2u *"_ivl_14", 31 0, L_0000000001323dc0;  1 drivers
v00000000012be300_0 .net *"_ivl_16", 31 0, L_0000000001322c20;  1 drivers
L_0000000001323ce8 .functor BUFT 1, C4<000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v00000000012bec60_0 .net *"_ivl_3", 26 0, L_0000000001323ce8;  1 drivers
L_0000000001323d30 .functor BUFT 1, C4<00000000000000000000000000010000>, C4<0>, C4<0>, C4<0>;
v00000000012bed00_0 .net/2u *"_ivl_4", 31 0, L_0000000001323d30;  1 drivers
v00000000012be3a0_0 .net *"_ivl_6", 31 0, L_0000000001323080;  1 drivers
o00000000012d1248 .functor BUFZ 1, C4<z>; HiZ drive
v00000000012be760_0 .net "clk", 0 0, o00000000012d1248;  0 drivers
v00000000012be800_0 .var "curr_line", 0 0;
v00000000012be4e0_0 .var "curr_off", 3 0;
v00000000012be8a0_0 .var "curr_word", 3 0;
o00000000012d1308 .functor BUFZ 5, C4<zzzzz>; HiZ drive
v00000000012be580_0 .net "fetch_addr", 4 0, o00000000012d1308;  0 drivers
v00000000012be620 .array "icache_mem", 31 0, 31 0;
v00000000012be9e0_0 .var "inst_batch", 127 0;
v00000000012bea80_0 .net "line_idx", 0 0, L_0000000001322d60;  1 drivers
o00000000012d1998 .functor BUFZ 1, C4<z>; HiZ drive
v00000000012beb20_0 .net "rst_n", 0 0, o00000000012d1998;  0 drivers
v00000000012bebc0_0 .net "word_off", 3 0, L_0000000001322860;  1 drivers
v00000000012be620_0 .array/port v00000000012be620, 0;
v00000000012be620_1 .array/port v00000000012be620, 1;
E_00000000012c0ce0/0 .event edge, v00000000012bebc0_0, v00000000012bea80_0, v00000000012be620_0, v00000000012be620_1;
v00000000012be620_2 .array/port v00000000012be620, 2;
v00000000012be620_3 .array/port v00000000012be620, 3;
v00000000012be620_4 .array/port v00000000012be620, 4;
v00000000012be620_5 .array/port v00000000012be620, 5;
E_00000000012c0ce0/1 .event edge, v00000000012be620_2, v00000000012be620_3, v00000000012be620_4, v00000000012be620_5;
v00000000012be620_6 .array/port v00000000012be620, 6;
v00000000012be620_7 .array/port v00000000012be620, 7;
v00000000012be620_8 .array/port v00000000012be620, 8;
v00000000012be620_9 .array/port v00000000012be620, 9;
E_00000000012c0ce0/2 .event edge, v00000000012be620_6, v00000000012be620_7, v00000000012be620_8, v00000000012be620_9;
v00000000012be620_10 .array/port v00000000012be620, 10;
v00000000012be620_11 .array/port v00000000012be620, 11;
v00000000012be620_12 .array/port v00000000012be620, 12;
v00000000012be620_13 .array/port v00000000012be620, 13;
E_00000000012c0ce0/3 .event edge, v00000000012be620_10, v00000000012be620_11, v00000000012be620_12, v00000000012be620_13;
v00000000012be620_14 .array/port v00000000012be620, 14;
v00000000012be620_15 .array/port v00000000012be620, 15;
v00000000012be620_16 .array/port v00000000012be620, 16;
v00000000012be620_17 .array/port v00000000012be620, 17;
E_00000000012c0ce0/4 .event edge, v00000000012be620_14, v00000000012be620_15, v00000000012be620_16, v00000000012be620_17;
v00000000012be620_18 .array/port v00000000012be620, 18;
v00000000012be620_19 .array/port v00000000012be620, 19;
v00000000012be620_20 .array/port v00000000012be620, 20;
v00000000012be620_21 .array/port v00000000012be620, 21;
E_00000000012c0ce0/5 .event edge, v00000000012be620_18, v00000000012be620_19, v00000000012be620_20, v00000000012be620_21;
v00000000012be620_22 .array/port v00000000012be620, 22;
v00000000012be620_23 .array/port v00000000012be620, 23;
v00000000012be620_24 .array/port v00000000012be620, 24;
v00000000012be620_25 .array/port v00000000012be620, 25;
E_00000000012c0ce0/6 .event edge, v00000000012be620_22, v00000000012be620_23, v00000000012be620_24, v00000000012be620_25;
v00000000012be620_26 .array/port v00000000012be620, 26;
v00000000012be620_27 .array/port v00000000012be620, 27;
v00000000012be620_28 .array/port v00000000012be620, 28;
v00000000012be620_29 .array/port v00000000012be620, 29;
E_00000000012c0ce0/7 .event edge, v00000000012be620_26, v00000000012be620_27, v00000000012be620_28, v00000000012be620_29;
v00000000012be620_30 .array/port v00000000012be620, 30;
v00000000012be620_31 .array/port v00000000012be620, 31;
E_00000000012c0ce0/8 .event edge, v00000000012be620_30, v00000000012be620_31;
E_00000000012c0ce0 .event/or E_00000000012c0ce0/0, E_00000000012c0ce0/1, E_00000000012c0ce0/2, E_00000000012c0ce0/3, E_00000000012c0ce0/4, E_00000000012c0ce0/5, E_00000000012c0ce0/6, E_00000000012c0ce0/7, E_00000000012c0ce0/8;
L_0000000001322ae0 .concat [ 5 27 0 0], o00000000012d1308, L_0000000001323ce8;
L_0000000001323080 .arith/div 32, L_0000000001322ae0, L_0000000001323d30;
L_0000000001322d60 .part L_0000000001323080, 0, 1;
L_0000000001322b80 .concat [ 5 27 0 0], o00000000012d1308, L_0000000001323d78;
L_0000000001322c20 .arith/mod 32, L_0000000001322b80, L_0000000001323dc0;
L_0000000001322860 .part L_0000000001322c20, 0, 4;
S_0000000001292660 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 32, 3 32 0, S_00000000012924d0;
 .timescale 0 0;
v00000000012bf0c0_0 .var/2s "i", 31 0;
S_00000000012927f0 .scope begin, "$unm_blk_3" "$unm_blk_3" 3 46, 3 46 0, S_00000000012924d0;
 .timescale 0 0;
v00000000012bef80 .array "tmp_mem", 31 0, 31 0;
S_00000000012c4c80 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 52, 3 52 0, S_00000000012927f0;
 .timescale 0 0;
v00000000012beee0_0 .var/2s "i", 31 0;
S_00000000012c4e10 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 53, 3 53 0, S_00000000012c4c80;
 .timescale 0 0;
v00000000012bee40_0 .var/2s "j", 31 0;
S_00000000012c4fa0 .scope begin, "$ivl_for_loop3" "$ivl_for_loop3" 3 58, 3 58 0, S_00000000012927f0;
 .timescale 0 0;
v00000000012bf160_0 .var/2s "i", 31 0;
S_00000000012c5130 .scope begin, "$ivl_for_loop4" "$ivl_for_loop4" 3 60, 3 60 0, S_00000000012c4fa0;
 .timescale 0 0;
v00000000012be440_0 .var/2s "j", 31 0;
    .scope S_00000000012924d0;
T_0 ;
Ewait_0 .event/or E_00000000012c0ce0, E_0x0;
    %wait Ewait_0;
    %fork t_1, S_0000000001292660;
    %jmp t_0;
    .scope S_0000000001292660;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000012bf0c0_0, 0, 32;
T_0.0 ;
    %load/vec4 v00000000012bf0c0_0;
    %cmpi/s 4, 0, 32;
    %jmp/0xz T_0.1, 5;
    %load/vec4 v00000000012bebc0_0;
    %pad/u 32;
    %load/vec4 v00000000012bf0c0_0;
    %add;
    %pad/u 4;
    %store/vec4 v00000000012be4e0_0, 0, 4;
    %load/vec4 v00000000012bea80_0;
    %pad/u 32;
    %load/vec4 v00000000012be4e0_0;
    %pad/u 32;
    %pushi/vec4 16, 0, 32;
    %div;
    %add;
    %pad/u 1;
    %store/vec4 v00000000012be800_0, 0, 1;
    %load/vec4 v00000000012be4e0_0;
    %pad/u 32;
    %pushi/vec4 16, 0, 32;
    %mod;
    %pad/u 4;
    %store/vec4 v00000000012be8a0_0, 0, 4;
    %load/vec4 v00000000012be800_0;
    %pad/u 32;
    %cmpi/u 2, 0, 32;
    %jmp/0xz  T_0.2, 5;
    %load/vec4 v00000000012be800_0;
    %pad/u 8;
    %pad/u 12;
    %muli 16, 0, 12;
    %pad/u 13;
    %load/vec4 v00000000012be8a0_0;
    %pad/u 6;
    %pad/u 13;
    %add;
    %ix/vec4 4;
    %load/vec4a v00000000012be620, 4;
    %load/vec4 v00000000012bf0c0_0;
    %pad/s 37;
    %muli 32, 0, 37;
    %ix/vec4/s 4;
    %store/vec4 v00000000012be9e0_0, 4, 32;
    %jmp T_0.3;
T_0.2 ;
    %pushi/vec4 19, 0, 32;
    %load/vec4 v00000000012bf0c0_0;
    %pad/s 37;
    %muli 32, 0, 37;
    %ix/vec4/s 4;
    %store/vec4 v00000000012be9e0_0, 4, 32;
T_0.3 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000012bf0c0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000012bf0c0_0, 0, 32;
    %jmp T_0.0;
T_0.1 ;
    %end;
    .scope S_00000000012924d0;
t_0 %join;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_00000000012924d0;
T_1 ;
    %fork t_3, S_00000000012927f0;
    %jmp t_2;
    .scope S_00000000012927f0;
t_3 ;
    %vpi_call/w 3 50 "$readmemh", "./memory/test.mem", v00000000012bef80 {0 0 0};
    %fork t_5, S_00000000012c4c80;
    %jmp t_4;
    .scope S_00000000012c4c80;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000012beee0_0, 0, 32;
T_1.0 ;
    %load/vec4 v00000000012beee0_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_1.1, 5;
    %fork t_7, S_00000000012c4e10;
    %jmp t_6;
    .scope S_00000000012c4e10;
t_7 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000012bee40_0, 0, 32;
T_1.2 ;
    %load/vec4 v00000000012bee40_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_1.3, 5;
    %load/vec4 v00000000012beee0_0;
    %pad/s 65;
    %muli 16, 0, 65;
    %load/vec4 v00000000012bee40_0;
    %pad/s 65;
    %add;
    %ix/vec4/s 4;
    %load/vec4a v00000000012bef80, 4;
    %load/vec4 v00000000012beee0_0;
    %pad/s 37;
    %pad/s 41;
    %muli 16, 0, 41;
    %pad/s 42;
    %load/vec4 v00000000012bee40_0;
    %pad/s 42;
    %add;
    %ix/vec4/s 4;
    %store/vec4a v00000000012be620, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000012bee40_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000012bee40_0, 0, 32;
    %jmp T_1.2;
T_1.3 ;
    %end;
    .scope S_00000000012c4c80;
t_6 %join;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000012beee0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000012beee0_0, 0, 32;
    %jmp T_1.0;
T_1.1 ;
    %end;
    .scope S_00000000012927f0;
t_4 %join;
    %vpi_call/w 3 57 "$display", "=== icache_mem ===" {0 0 0};
    %fork t_9, S_00000000012c4fa0;
    %jmp t_8;
    .scope S_00000000012c4fa0;
t_9 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000012bf160_0, 0, 32;
T_1.4 ;
    %load/vec4 v00000000012bf160_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_1.5, 5;
    %vpi_call/w 3 59 "$write", "cacheline[%0d]: ", v00000000012bf160_0 {0 0 0};
    %fork t_11, S_00000000012c5130;
    %jmp t_10;
    .scope S_00000000012c5130;
t_11 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000012be440_0, 0, 32;
T_1.6 ;
    %load/vec4 v00000000012be440_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_1.7, 5;
    %load/vec4 v00000000012bf160_0;
    %pad/s 37;
    %pad/s 41;
    %muli 16, 0, 41;
    %pad/s 42;
    %load/vec4 v00000000012be440_0;
    %pad/s 42;
    %add;
    %ix/vec4/s 4;
    %load/vec4a v00000000012be620, 4;
    %vpi_call/w 3 61 "$write", "%h ", S<0,vec4,u32> {1 0 0};
    %load/vec4 v00000000012be440_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v00000000012be440_0, 0, 32;
    %jmp T_1.6;
T_1.7 ;
    %end;
    .scope S_00000000012c4fa0;
t_10 %join;
    %vpi_call/w 3 62 "$write", " \012" {0 0 0};
    %load/vec4 v00000000012bf160_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v00000000012bf160_0, 0, 32;
    %jmp T_1.4;
T_1.5 ;
    %end;
    .scope S_00000000012927f0;
t_8 %join;
    %end;
    .scope S_00000000012924d0;
t_2 %join;
    %end;
    .thread T_1;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "-";
    "./modules/icache.sv";
